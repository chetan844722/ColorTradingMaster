app = "color-trading-platform"
primary_region = "sin"  # Can be changed to your preferred region
kill_signal = "SIGINT"
kill_timeout = "5s"

[experimental]
  auto_rollback = true

[build]
  dockerfile = "Dockerfile"
  build-target = "production"

[deploy]
  release_command = "npm run db:push"
  strategy = "bluegreen"

[env]
  PORT = "5000"
  NODE_ENV = "production"
  TZ = "UTC"
  SERVER_URL = "https://color-trading-platform.fly.dev"
  # SESSION_SECRET is set via CLI: fly secrets set SESSION_SECRET=...

[http_service]
  internal_port = 5000
  force_https = true
  auto_stop_machines = true
  auto_start_machines = true
  min_machines_running = 1  # Keep at least one machine running for faster responses
  processes = ["app"]

  # Custom headers for security
  [[http_service.headers]]
    for = "/*"
    [http_service.headers.values]
      X-Frame-Options = "DENY"
      X-XSS-Protection = "1; mode=block"
      X-Content-Type-Options = "nosniff"
      Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
      Referrer-Policy = "strict-origin-when-cross-origin"

  [http_service.concurrency]
    type = "connections"
    hard_limit = 1000
    soft_limit = 500

  # Health check for auto-healing
  [[http_service.checks]]
    grace_period = "20s"
    interval = "30s"
    method = "GET"
    timeout = "10s"
    path = "/api/health"
    protocol = "http"

# Enable metrics for monitoring
[metrics]
  port = 9091
  path = "/metrics"

# Resources allocated to the app
[[vm]]
  size = "shared-cpu-1x"  # More efficient than specifying memory/cpu separately
  memory = "1gb"
  cpu_kind = "shared"
  cpus = 1

# Database volume (if needed)
[mounts]
  source = "data"
  destination = "/data"

# Specify regions for global deployment
[regions]
  # Choose regions close to your users
  allowed = ["sin", "hkg", "syd"]
  
# Set up scheduled tasks (similar to cron)
[[scheduled_tasks]]
  command = "npm run daily-rewards"
  schedule = "@daily" # Run once a day

# Ensure TLS (SSL) connections
[http_service.tls_options]
  alpn = ["h2", "http/1.1"]
  versions = ["TLSv1.2", "TLSv1.3"]