[build]
  command = "npm run build"
  publish = "client/dist"
  functions = "netlify/functions"
  ignore = "git diff --quiet $CACHED_COMMIT_REF $COMMIT_REF -- ./client ./server ./shared"

[build.environment]
  NODE_VERSION = "20"
  NPM_VERSION = "10"
  NODE_ENV = "production"

# API endpoints redirect to Netlify Functions
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/api/:splat"
  status = 200
  force = true
  
  # API headers for security
  [redirects.headers]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"

# WebSocket endpoint redirect
[[redirects]]
  from = "/ws"
  to = "/.netlify/functions/api/ws"
  status = 200
  force = true
  
  [redirects.headers]
    Connection = "upgrade"
    Upgrade = "websocket"

# Caching for static assets
[[redirects]]
  from = "/assets/*"
  to = "/assets/:splat"
  status = 200
  
  [redirects.headers]
    Cache-Control = "public, max-age=31536000, immutable"

# SPA fallback for client-side routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  
  [redirects.headers]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"

# Function settings
[functions]
  node_bundler = "esbuild"
  external_node_modules = ["pg"]
  directory = "netlify/functions"
  included_files = ["client/dist/**", "shared/**", "server/**"]

# Dev settings
[dev]
  framework = "#custom"
  command = "npm run dev"
  port = 5000
  targetPort = 5000

# Headers for optimal security and performance
[[headers]]
  for = "/*"
  [headers.values]
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Content-Security-Policy = "default-src 'self'; connect-src 'self' ws: wss:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';"

# Asset optimization
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.images]
  compress = true